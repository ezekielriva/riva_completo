// Code generated by MockGen. DO NOT EDIT.
// Source: games.go
//
// Generated by this command:
//
//	mockgen -source=games.go
//

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	entities "github.com/ezekielriva/riva_completo/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockGamesRepository is a mock of GamesRepository interface.
type MockGamesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGamesRepositoryMockRecorder
}

// MockGamesRepositoryMockRecorder is the mock recorder for MockGamesRepository.
type MockGamesRepositoryMockRecorder struct {
	mock *MockGamesRepository
}

// NewMockGamesRepository creates a new mock instance.
func NewMockGamesRepository(ctrl *gomock.Controller) *MockGamesRepository {
	mock := &MockGamesRepository{ctrl: ctrl}
	mock.recorder = &MockGamesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGamesRepository) EXPECT() *MockGamesRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockGamesRepository) Create(u *entities.Game) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockGamesRepositoryMockRecorder) Create(u any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockGamesRepository)(nil).Create), u)
}
